import unittest
from pymongo import MongoClient

class TestMongoDB(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        # Set up the database connection
        uri = "mongodb+srv://Home_Automation_AUT:Home_Automation_AUT@cluster0.9awkbpi.mongodb.net/?retryWrites=true&w=majority"
        cls.client = MongoClient(uri)
        cls.db = cls.client.test_database
        cls.collection = cls.db.test_collection

    @classmethod
    def tearDownClass(cls):
        # Clean up after the test
        cls.client.close()

    def test_connection(self):
        # Test if the database connection is successful
        self.assertTrue(self.client is not None)
        self.assertTrue(self.db is not None)

    def test_insert_and_retrieve(self):
        # Test if a document can be inserted and retrieved
        data = {"object_name": "light_fitting", "is_on": True}
        result = self.collection.insert_one(data)
        self.assertTrue(result.acknowledged)

        retrieved_data = self.collection.find_one({"object_name": "light_fitting"})
        self.assertIsNotNone(retrieved_data)
        self.assertEqual(retrieved_data["is_on"], True)

        self.collection.delete_one({"object_name": "light_fitting"})

if __name__ == '__main__':
    # Run the test suite
    test_suite = unittest.TestLoader().loadTestsFromTestCase(TestMongoDB)
    test_result = unittest.TextTestRunner(verbosity=2).run(test_suite)
    if test_result.wasSuccessful():
        print("All tests passed!")
    else:
        print("Some tests failed.") 
